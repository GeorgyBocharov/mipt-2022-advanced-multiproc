# JMH version: 1.35
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56752:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -XX:-BackgroundCompilation
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 7 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: quicksort.JmhAsyncSorter.sort
# Parameters: (concurrentLimit = 300000)

# Run progress: 0,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 27129611129,000 ns/op
# Warmup Iteration   2: 27923396275,000 ns/op
# Warmup Iteration   3: 27376659228,000 ns/op
Iteration   1: 27667894443,000 ns/op
Iteration   2: 27485626159,000 ns/op
Iteration   3: 27428685823,000 ns/op
Iteration   4: 28007367131,000 ns/op
Iteration   5: 29990847820,000 ns/op
Iteration   6: 27793220018,000 ns/op
Iteration   7: 28425149134,000 ns/op


Result "quicksort.JmhAsyncSorter.sort":
  28114112932,571 ±(99.9%) 2013851755,748 ns/op [Average]
  (min, avg, max) = (27428685823,000, 28114112932,571, 29990847820,000), stdev = 894162659,754
  CI (99.9%): [26100261176,824, 30127964688,319] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56752:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -XX:-BackgroundCompilation
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 7 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: quicksort.JmhAsyncSorter.sort
# Parameters: (concurrentLimit = 500000)

# Run progress: 33,33% complete, ETA 00:10:27
# Fork: 1 of 1
# Warmup Iteration   1: 28914056309,000 ns/op
# Warmup Iteration   2: 28917979125,000 ns/op
# Warmup Iteration   3: 27451137240,000 ns/op
Iteration   1: 26990850095,000 ns/op
Iteration   2: 28465772900,000 ns/op
Iteration   3: 31747964960,000 ns/op
Iteration   4: 28552487850,000 ns/op
Iteration   5: 28046561887,000 ns/op
Iteration   6: 27044040696,000 ns/op
Iteration   7: 29150419311,000 ns/op


Result "quicksort.JmhAsyncSorter.sort":
  28571156814,143 ±(99.9%) 3625045098,328 ns/op [Average]
  (min, avg, max) = (26990850095,000, 28571156814,143, 31747964960,000), stdev = 1609542488,715
  CI (99.9%): [24946111715,815, 32196201912,471] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56752:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -XX:-BackgroundCompilation
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 7 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: quicksort.JmhAsyncSorter.sort
# Parameters: (concurrentLimit = 1000000)

# Run progress: 66,67% complete, ETA 00:05:14
# Fork: 1 of 1
# Warmup Iteration   1: 31537344253,000 ns/op
# Warmup Iteration   2: 29416382931,000 ns/op
# Warmup Iteration   3: 26004313789,000 ns/op
Iteration   1: 26029778937,000 ns/op
Iteration   2: 25770849102,000 ns/op
Iteration   3: 26110300650,000 ns/op
Iteration   4: 29976658598,000 ns/op
Iteration   5: 26694961989,000 ns/op
Iteration   6: 25935619625,000 ns/op
Iteration   7: 29108720902,000 ns/op


Result "quicksort.JmhAsyncSorter.sort":
  27089555686,143 ±(99.9%) 3870579599,965 ns/op [Average]
  (min, avg, max) = (25770849102,000, 27089555686,143, 29976658598,000), stdev = 1718561329,063
  CI (99.9%): [23218976086,178, 30960135286,107] (assumes normal distribution)


# Run complete. Total time: 00:15:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark            (concurrentLimit)  Mode  Cnt            Score            Error  Units
JmhAsyncSorter.sort             300000  avgt    7  28114112932,571 ± 2013851755,748  ns/op
JmhAsyncSorter.sort             500000  avgt    7  28571156814,143 ± 3625045098,328  ns/op
JmhAsyncSorter.sort            1000000  avgt    7  27089555686,143 ± 3870579599,965  ns/op

Benchmark result is saved to benchmark_async_vs_sync_quicksort_v2.json
